{"version":3,"sources":["components/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","date","Date","timerId","this","window","setInterval","setState","console","log","toLocaleTimeString","prev","name","props","clearInterval","className","React","Component","getRandomName","value","Math","random","toString","slice","App","hasClock","clockName","clockNameTimer","document","addEventListener","event","preventDefault","ReactDOM","render","getElementById"],"mappings":"sNAUaA,EAAb,4MACEC,MAAyB,CACvBC,KAAM,IAAIC,MAFd,EAKEC,QAAU,EALZ,uDAOE,WAAqB,IAAD,OAClBC,KAAKD,QAAUE,OAAOC,aAAY,WAChC,IAAML,EAAO,IAAIC,KAEjB,EAAKK,SAAS,CAAEN,SAEhBO,QAAQC,IAAI,EAAKT,MAAMC,KAAKS,wBAC3B,OAdP,gCAiBE,SAAmBC,GACjB,IAAQC,EAASR,KAAKS,MAAdD,KAEJD,EAAKC,OAASA,GAEhBJ,QAAQC,IAAR,uBACkBE,EAAKC,KADvB,eACkCA,MAvBxC,kCA4BE,WACEE,cAAcV,KAAKD,WA7BvB,oBAgCE,WACE,IAAQF,EAASG,KAAKJ,MAAdC,KAER,OACE,sBAAKc,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGX,KAAKS,MAAMD,OAGb,YAED,sBAAMG,UAAU,cAAhB,SACGd,EAAKS,8BA5ChB,GAA2BM,IAAMC,WCqDjC,SAASC,IACP,IAAMC,EAAQC,KAAKC,SAASC,WAAWC,MAAM,EAAG,GAEhD,MAAM,SAAN,OAAgBJ,GAQX,IAAMK,EAAb,4MACExB,MAAyB,CACvByB,UAAU,EACVC,UAAWR,KAHf,EAMEjB,KAAO,IAAIC,KANb,EAQEyB,eAAiB,EARnB,uDAUE,WAAqB,IAAD,OAClBvB,KAAKG,SAAS,CAAEkB,UAAU,IAC1BrB,KAAKuB,eAAiBtB,OAAOC,aAAY,WACvC,EAAKC,SAAS,CAAEmB,UAAWR,QAC1B,MAEHU,SAASC,iBAAiB,eAAe,SAACC,GACxCA,EAAMC,iBACN,EAAKxB,SAAS,CAAEkB,UAAU,OAG5BG,SAASC,iBAAiB,SAAS,kBACjC,EAAKtB,SAAS,CAAEkB,UAAU,SAtBhC,kCA0BE,WACEX,cAAcV,KAAKuB,gBACnBvB,KAAKG,SAAS,CAAEkB,UAAU,MA5B9B,mCA+BE,WACE,IAAQA,EAAarB,KAAKJ,MAAlByB,SAER,OAAOrB,KAAKG,SAAS,CAAEkB,UAAWA,MAlCtC,oBAqCE,WACE,MAAgCrB,KAAKJ,MAA7ByB,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,UAElB,OACE,sBAAKX,UAAU,MAAf,UACE,6CAECU,GACI,cAAC,EAAD,CAAOb,KAAMc,WA7C1B,GAAyBV,IAAMC,WCvE/Be,IAASC,OACP,cAAC,EAAD,IACAL,SAASM,eAAe,W","file":"static/js/main.9b9dcad1.chunk.js","sourcesContent":["import React from 'react';\n\ninterface State {\n  date: Date;\n}\n\ninterface Props {\n  name: string;\n}\n\nexport class Clock extends React.Component<Props, State> {\n  state: Readonly<State> = {\n    date: new Date(),\n  };\n\n  timerId = 0;\n\n  componentDidMount() {\n    this.timerId = window.setInterval(() => {\n      const date = new Date();\n\n      this.setState({ date });\n      // eslint-disable-next-line no-console\n      console.log(this.state.date.toLocaleTimeString());\n    }, 1000);\n  }\n\n  componentDidUpdate(prev: Props) {\n    const { name } = this.props;\n\n    if (prev.name !== name) {\n      // eslint-disable-next-line no-console\n      console.log(\n        `Renamed from ${prev.name} to ${name}`,\n      );\n    }\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerId);\n  }\n\n  render() {\n    const { date } = this.state;\n\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {this.props.name}\n        </strong>\n\n        {' time is '}\n\n        <span className=\"Clock__time\">\n          {date.toLocaleTimeString()}\n        </span>\n      </div>\n    );\n  }\n}\n","// import './App.scss';\n// import { Component } from 'react';\n// import { Clock } from './components/Clock';\n\n// function getRandomName(): string {\n//   const value = Math.random().toString().slice(2, 6);\n\n//   return `Clock-${value}`;\n// }\n\n// type State = {\n//   hasClock: boolean,\n//   clockName: string,\n// };\n\n// export class App extends Component<{}, State> {\n//   state = {\n//     hasClock: true,\n//     clockName: getRandomName(),\n//   };\n\n//   intervalName = 0;\n\n//   componentDidMount() {\n//     window.addEventListener('contextmenu', () => {\n//       this.setState({\n//         hasClock: false,\n//       });\n//     });\n\n//     document.addEventListener('click', () => {\n//       this.setState({\n//         hasClock: true,\n//       });\n//     });\n\n//     this.intervalName = window.setInterval(() => {\n//       this.setState({\n//         clockName: getRandomName(),\n//       });\n//     }, 3300);\n\n//     if (!this.state.hasClock) {\n//       window.clearInterval(this.intervalName);\n//     }\n//   }\n\n//   render() {\n//     const { hasClock, clockName } = this.state;\n\n//     return (\n//       <div className=\"App\">\n//         <h1>React clock</h1>\n//         {hasClock && <Clock clockName={clockName} />}\n//       </div>\n//     );\n//   }\n// }\n\nimport React from 'react';\nimport './App.scss';\nimport { Clock } from './components/Clock';\n\nfunction getRandomName(): string {\n  const value = Math.random().toString().slice(2, 6);\n\n  return `Clock-${value}`;\n}\n\nexport interface State {\n  hasClock: boolean;\n  clockName: string;\n}\n\nexport class App extends React.Component<{}, State> {\n  state: Readonly<State> = {\n    hasClock: false,\n    clockName: getRandomName(),\n  };\n\n  date = new Date();\n\n  clockNameTimer = 0;\n\n  componentDidMount() {\n    this.setState({ hasClock: true });\n    this.clockNameTimer = window.setInterval(() => {\n      this.setState({ clockName: getRandomName() });\n    }, 3300);\n\n    document.addEventListener('contextmenu', (event: Event) => {\n      event.preventDefault();\n      this.setState({ hasClock: false });\n    });\n\n    document.addEventListener('click', () => (\n      this.setState({ hasClock: true })\n    ));\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.clockNameTimer);\n    this.setState({ hasClock: false });\n  }\n\n  changeClockVisibility() {\n    const { hasClock } = this.state;\n\n    return this.setState({ hasClock: !hasClock });\n  }\n\n  render() {\n    const { hasClock, clockName } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n\n        {hasClock\n          && <Clock name={clockName} />}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}