{"version":3,"sources":["components/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","date","Date","timerId","setTimerForDate","window","setInterval","setState","showInConsole","console","log","toLocaleTimeString","this","prevProps","prevClockName","clockName","currenClockName","props","clearInterval","timeString","className","Component","getRandomName","value","Math","random","toString","slice","App","hasClock","intervalName","addEventListener","document","ReactDOM","render","getElementById"],"mappings":"6MAUaA,EAAb,4MACEC,MAAQ,CACNC,KAAM,IAAIC,MAFd,EAKEC,QAAU,EALZ,EAyBEC,gBAAkB,WAChB,OAAOC,OAAOC,aAAY,WACxB,EAAKC,SAAS,CAAEN,KAAM,IAAIC,OAC1B,EAAKM,kBACJ,MA7BP,EAgCEA,cAAgB,WAEdC,QAAQC,IAAI,EAAKV,MAAMC,KAAKU,uBAlChC,uDAOE,WACEC,KAAKT,QAAUS,KAAKR,oBARxB,gCAWE,SAAmBS,GACjB,IAAMC,EAAgBD,EAAUE,UAC1BC,EAAkBJ,KAAKK,MAAMF,UAE/BD,IAAkBE,GAEpBP,QAAQC,IAAR,uBAA4BI,EAA5B,eAAgDE,MAjBtD,kCAqBE,WACEX,OAAOa,cAAcN,KAAKT,WAtB9B,oBAqCE,WACE,IAAQY,EAAcH,KAAKK,MAAnBF,UAEFI,EADWP,KAAKZ,MAAdC,KACgBU,qBAExB,OACE,sBAAKS,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGL,IAGF,YAED,sBAAMK,UAAU,cAAhB,SACGD,WAnDX,GAA2BE,aCN3B,SAASC,IACP,IAAMC,EAAQC,KAAKC,SAASC,WAAWC,MAAM,EAAG,GAEhD,MAAM,SAAN,OAAgBJ,GAQX,IAAMK,EAAb,4MACE5B,MAAQ,CACN6B,UAAU,EACVd,UAAWO,KAHf,EAMEQ,aAAe,EANjB,uDAQE,WAAqB,IAAD,OAClBzB,OAAO0B,iBAAiB,eAAe,WACrC,EAAKxB,SAAS,CACZsB,UAAU,OAIdG,SAASD,iBAAiB,SAAS,WACjC,EAAKxB,SAAS,CACZsB,UAAU,OAIdjB,KAAKkB,aAAezB,OAAOC,aAAY,WACrC,EAAKC,SAAS,CACZQ,UAAWO,QAEZ,MAEEV,KAAKZ,MAAM6B,UACdxB,OAAOa,cAAcN,KAAKkB,gBA5BhC,oBAgCE,WACE,MAAgClB,KAAKZ,MAA7B6B,EAAR,EAAQA,SAAUd,EAAlB,EAAkBA,UAElB,OACE,sBAAKK,UAAU,MAAf,UACE,6CACCS,GAAY,cAAC,EAAD,CAAOd,UAAWA,WAtCvC,GAAyBM,aCZzBY,IAASC,OACP,cAAC,EAAD,IACAF,SAASG,eAAe,W","file":"static/js/main.6e15599f.chunk.js","sourcesContent":["import { Component } from 'react';\n\ntype Props = {\n  clockName: string,\n};\n\ntype State = {\n  date: Date,\n};\n\nexport class Clock extends Component<Props, State> {\n  state = {\n    date: new Date(),\n  };\n\n  timerId = 0;\n\n  componentDidMount() {\n    this.timerId = this.setTimerForDate();\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    const prevClockName = prevProps.clockName;\n    const currenClockName = this.props.clockName;\n\n    if (prevClockName !== currenClockName) {\n      // eslint-disable-next-line no-console\n      console.log(`Renamed from ${prevClockName} to ${currenClockName}`);\n    }\n  }\n\n  componentWillUnmount() {\n    window.clearInterval(this.timerId);\n  }\n\n  setTimerForDate = () => {\n    return window.setInterval(() => {\n      this.setState({ date: new Date() });\n      this.showInConsole();\n    }, 1000);\n  };\n\n  showInConsole = () => {\n    // eslint-disable-next-line no-console\n    console.log(this.state.date.toLocaleTimeString());\n  };\n\n  render() {\n    const { clockName } = this.props;\n    const { date } = this.state;\n    const timeString = date.toLocaleTimeString();\n\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {clockName}\n        </strong>\n\n        {' time is '}\n\n        <span className=\"Clock__time\">\n          {timeString}\n        </span>\n      </div>\n    );\n  }\n}\n","import './App.scss';\nimport { Component } from 'react';\nimport { Clock } from './components/Clock';\n\nfunction getRandomName(): string {\n  const value = Math.random().toString().slice(2, 6);\n\n  return `Clock-${value}`;\n}\n\ntype State = {\n  hasClock: boolean,\n  clockName: string,\n};\n\nexport class App extends Component<{}, State> {\n  state = {\n    hasClock: true,\n    clockName: getRandomName(),\n  };\n\n  intervalName = 0;\n\n  componentDidMount() {\n    window.addEventListener('contextmenu', () => {\n      this.setState({\n        hasClock: false,\n      });\n    });\n\n    document.addEventListener('click', () => {\n      this.setState({\n        hasClock: true,\n      });\n    });\n\n    this.intervalName = window.setInterval(() => {\n      this.setState({\n        clockName: getRandomName(),\n      });\n    }, 3300);\n\n    if (!this.state.hasClock) {\n      window.clearInterval(this.intervalName);\n    }\n  }\n\n  render() {\n    const { hasClock, clockName } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n        {hasClock && <Clock clockName={clockName} />}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}